#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="rvs")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCita(Cita instance);
    partial void UpdateCita(Cita instance);
    partial void DeleteCita(Cita instance);
    partial void InsertSintoma_enfermedad(Sintoma_enfermedad instance);
    partial void UpdateSintoma_enfermedad(Sintoma_enfermedad instance);
    partial void DeleteSintoma_enfermedad(Sintoma_enfermedad instance);
    partial void InsertCiudad(Ciudad instance);
    partial void UpdateCiudad(Ciudad instance);
    partial void DeleteCiudad(Ciudad instance);
    partial void InsertEnfermedad(Enfermedad instance);
    partial void UpdateEnfermedad(Enfermedad instance);
    partial void DeleteEnfermedad(Enfermedad instance);
    partial void InsertEnte_salud(Ente_salud instance);
    partial void UpdateEnte_salud(Ente_salud instance);
    partial void DeleteEnte_salud(Ente_salud instance);
    partial void InsertEspecialidad(Especialidad instance);
    partial void UpdateEspecialidad(Especialidad instance);
    partial void DeleteEspecialidad(Especialidad instance);
    partial void InsertEspecialista(Especialista instance);
    partial void UpdateEspecialista(Especialista instance);
    partial void DeleteEspecialista(Especialista instance);
    partial void InsertHora_cita(Hora_cita instance);
    partial void UpdateHora_cita(Hora_cita instance);
    partial void DeleteHora_cita(Hora_cita instance);
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertRecomendacion(Recomendacion instance);
    partial void UpdateRecomendacion(Recomendacion instance);
    partial void DeleteRecomendacion(Recomendacion instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    partial void InsertSintoma(Sintoma instance);
    partial void UpdateSintoma(Sintoma instance);
    partial void DeleteSintoma(Sintoma instance);
    #endregion
		
		public ORMDataContext() : 
				base("Data Source=FAMILIA;Initial Catalog=rvs;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cita> Cita
		{
			get
			{
				return this.GetTable<Cita>();
			}
		}
		
		public System.Data.Linq.Table<Sintoma_enfermedad> Sintoma_enfermedad
		{
			get
			{
				return this.GetTable<Sintoma_enfermedad>();
			}
		}
		
		public System.Data.Linq.Table<Ciudad> Ciudad
		{
			get
			{
				return this.GetTable<Ciudad>();
			}
		}
		
		public System.Data.Linq.Table<Enfermedad> Enfermedad
		{
			get
			{
				return this.GetTable<Enfermedad>();
			}
		}
		
		public System.Data.Linq.Table<Ente_salud> Ente_salud
		{
			get
			{
				return this.GetTable<Ente_salud>();
			}
		}
		
		public System.Data.Linq.Table<Especialidad> Especialidad
		{
			get
			{
				return this.GetTable<Especialidad>();
			}
		}
		
		public System.Data.Linq.Table<Especialista> Especialista
		{
			get
			{
				return this.GetTable<Especialista>();
			}
		}
		
		public System.Data.Linq.Table<Hora_cita> Hora_cita
		{
			get
			{
				return this.GetTable<Hora_cita>();
			}
		}
		
		public System.Data.Linq.Table<Persona> Persona
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<Recomendacion> Recomendacion
		{
			get
			{
				return this.GetTable<Recomendacion>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rol
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<Sintoma> Sintoma
		{
			get
			{
				return this.GetTable<Sintoma>();
			}
		}
		
		public System.Data.Linq.Table<VistaEnfermedad> VistaEnfermedad
		{
			get
			{
				return this.GetTable<VistaEnfermedad>();
			}
		}
		
		public System.Data.Linq.Table<VistaEspecialista> VistaEspecialista
		{
			get
			{
				return this.GetTable<VistaEspecialista>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_login")]
		public ISingleResult<sp_loginResult> sp_login([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cedula, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cedula, password);
			return ((ISingleResult<sp_loginResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cita")]
	public partial class Cita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cita;
		
		private int _id_persona;
		
		private int _id_especialista;
		
		private System.DateTime _fecha_cita;
		
		private int _id_hora;
		
		private System.Nullable<int> _calificacion;
		
		private string _estado;
		
		private EntityRef<Especialista> _Especialista;
		
		private EntityRef<Hora_cita> _Hora_cita;
		
		private EntityRef<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_citaChanging(int value);
    partial void Onid_citaChanged();
    partial void Onid_personaChanging(int value);
    partial void Onid_personaChanged();
    partial void Onid_especialistaChanging(int value);
    partial void Onid_especialistaChanged();
    partial void Onfecha_citaChanging(System.DateTime value);
    partial void Onfecha_citaChanged();
    partial void Onid_horaChanging(int value);
    partial void Onid_horaChanged();
    partial void OncalificacionChanging(System.Nullable<int> value);
    partial void OncalificacionChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    #endregion
		
		public Cita()
		{
			this._Especialista = default(EntityRef<Especialista>);
			this._Hora_cita = default(EntityRef<Hora_cita>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cita", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_cita
		{
			get
			{
				return this._id_cita;
			}
			set
			{
				if ((this._id_cita != value))
				{
					this.Onid_citaChanging(value);
					this.SendPropertyChanging();
					this._id_cita = value;
					this.SendPropertyChanged("id_cita");
					this.Onid_citaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", DbType="Int NOT NULL")]
		public int id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personaChanging(value);
					this.SendPropertyChanging();
					this._id_persona = value;
					this.SendPropertyChanged("id_persona");
					this.Onid_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_especialista", DbType="Int NOT NULL")]
		public int id_especialista
		{
			get
			{
				return this._id_especialista;
			}
			set
			{
				if ((this._id_especialista != value))
				{
					if (this._Especialista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_especialistaChanging(value);
					this.SendPropertyChanging();
					this._id_especialista = value;
					this.SendPropertyChanged("id_especialista");
					this.Onid_especialistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_cita", DbType="Date NOT NULL")]
		public System.DateTime fecha_cita
		{
			get
			{
				return this._fecha_cita;
			}
			set
			{
				if ((this._fecha_cita != value))
				{
					this.Onfecha_citaChanging(value);
					this.SendPropertyChanging();
					this._fecha_cita = value;
					this.SendPropertyChanged("fecha_cita");
					this.Onfecha_citaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_hora", DbType="Int NOT NULL")]
		public int id_hora
		{
			get
			{
				return this._id_hora;
			}
			set
			{
				if ((this._id_hora != value))
				{
					if (this._Hora_cita.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_horaChanging(value);
					this.SendPropertyChanging();
					this._id_hora = value;
					this.SendPropertyChanged("id_hora");
					this.Onid_horaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calificacion", DbType="Int")]
		public System.Nullable<int> calificacion
		{
			get
			{
				return this._calificacion;
			}
			set
			{
				if ((this._calificacion != value))
				{
					this.OncalificacionChanging(value);
					this.SendPropertyChanging();
					this._calificacion = value;
					this.SendPropertyChanged("calificacion");
					this.OncalificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialista_Cita", Storage="_Especialista", ThisKey="id_especialista", OtherKey="id_especialista", IsForeignKey=true)]
		public Especialista Especialista
		{
			get
			{
				return this._Especialista.Entity;
			}
			set
			{
				Especialista previousValue = this._Especialista.Entity;
				if (((previousValue != value) 
							|| (this._Especialista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Especialista.Entity = null;
						previousValue.Cita.Remove(this);
					}
					this._Especialista.Entity = value;
					if ((value != null))
					{
						value.Cita.Add(this);
						this._id_especialista = value.id_especialista;
					}
					else
					{
						this._id_especialista = default(int);
					}
					this.SendPropertyChanged("Especialista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hora_cita_Cita", Storage="_Hora_cita", ThisKey="id_hora", OtherKey="id_hora", IsForeignKey=true)]
		public Hora_cita Hora_cita
		{
			get
			{
				return this._Hora_cita.Entity;
			}
			set
			{
				Hora_cita previousValue = this._Hora_cita.Entity;
				if (((previousValue != value) 
							|| (this._Hora_cita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hora_cita.Entity = null;
						previousValue.Cita.Remove(this);
					}
					this._Hora_cita.Entity = value;
					if ((value != null))
					{
						value.Cita.Add(this);
						this._id_hora = value.id_hora;
					}
					else
					{
						this._id_hora = default(int);
					}
					this.SendPropertyChanged("Hora_cita");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Cita", Storage="_Persona", ThisKey="id_persona", OtherKey="id_persona", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Cita.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Cita.Add(this);
						this._id_persona = value.id_persona;
					}
					else
					{
						this._id_persona = default(int);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sintoma_enfermedad")]
	public partial class Sintoma_enfermedad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sintoma_enfermedad;
		
		private int _id_sintoma;
		
		private int _id_enfermedad;
		
		private EntityRef<Enfermedad> _Enfermedad;
		
		private EntityRef<Sintoma> _Sintoma;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_sintoma_enfermedadChanging(int value);
    partial void Onid_sintoma_enfermedadChanged();
    partial void Onid_sintomaChanging(int value);
    partial void Onid_sintomaChanged();
    partial void Onid_enfermedadChanging(int value);
    partial void Onid_enfermedadChanged();
    #endregion
		
		public Sintoma_enfermedad()
		{
			this._Enfermedad = default(EntityRef<Enfermedad>);
			this._Sintoma = default(EntityRef<Sintoma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sintoma_enfermedad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sintoma_enfermedad
		{
			get
			{
				return this._id_sintoma_enfermedad;
			}
			set
			{
				if ((this._id_sintoma_enfermedad != value))
				{
					this.Onid_sintoma_enfermedadChanging(value);
					this.SendPropertyChanging();
					this._id_sintoma_enfermedad = value;
					this.SendPropertyChanged("id_sintoma_enfermedad");
					this.Onid_sintoma_enfermedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sintoma", DbType="Int NOT NULL")]
		public int id_sintoma
		{
			get
			{
				return this._id_sintoma;
			}
			set
			{
				if ((this._id_sintoma != value))
				{
					if (this._Sintoma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_sintomaChanging(value);
					this.SendPropertyChanging();
					this._id_sintoma = value;
					this.SendPropertyChanged("id_sintoma");
					this.Onid_sintomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_enfermedad", DbType="Int NOT NULL")]
		public int id_enfermedad
		{
			get
			{
				return this._id_enfermedad;
			}
			set
			{
				if ((this._id_enfermedad != value))
				{
					if (this._Enfermedad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_enfermedadChanging(value);
					this.SendPropertyChanging();
					this._id_enfermedad = value;
					this.SendPropertyChanged("id_enfermedad");
					this.Onid_enfermedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enfermedad_Sintoma_enfermedad", Storage="_Enfermedad", ThisKey="id_enfermedad", OtherKey="id_enfermedad", IsForeignKey=true)]
		public Enfermedad Enfermedad
		{
			get
			{
				return this._Enfermedad.Entity;
			}
			set
			{
				Enfermedad previousValue = this._Enfermedad.Entity;
				if (((previousValue != value) 
							|| (this._Enfermedad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Enfermedad.Entity = null;
						previousValue.Sintoma_enfermedad.Remove(this);
					}
					this._Enfermedad.Entity = value;
					if ((value != null))
					{
						value.Sintoma_enfermedad.Add(this);
						this._id_enfermedad = value.id_enfermedad;
					}
					else
					{
						this._id_enfermedad = default(int);
					}
					this.SendPropertyChanged("Enfermedad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sintoma_Sintoma_enfermedad", Storage="_Sintoma", ThisKey="id_sintoma", OtherKey="id_sintoma", IsForeignKey=true)]
		public Sintoma Sintoma
		{
			get
			{
				return this._Sintoma.Entity;
			}
			set
			{
				Sintoma previousValue = this._Sintoma.Entity;
				if (((previousValue != value) 
							|| (this._Sintoma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sintoma.Entity = null;
						previousValue.Sintoma_enfermedad.Remove(this);
					}
					this._Sintoma.Entity = value;
					if ((value != null))
					{
						value.Sintoma_enfermedad.Add(this);
						this._id_sintoma = value.id_sintoma;
					}
					else
					{
						this._id_sintoma = default(int);
					}
					this.SendPropertyChanged("Sintoma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ciudad")]
	public partial class Ciudad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ciudad;
		
		private string _ciudad1;
		
		private EntitySet<Ente_salud> _Ente_salud;
		
		private EntitySet<Especialista> _Especialista;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Onciudad1Changing(string value);
    partial void Onciudad1Changed();
    #endregion
		
		public Ciudad()
		{
			this._Ente_salud = new EntitySet<Ente_salud>(new Action<Ente_salud>(this.attach_Ente_salud), new Action<Ente_salud>(this.detach_Ente_salud));
			this._Especialista = new EntitySet<Especialista>(new Action<Especialista>(this.attach_Especialista), new Action<Especialista>(this.detach_Especialista));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ciudad", Storage="_ciudad1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ciudad1
		{
			get
			{
				return this._ciudad1;
			}
			set
			{
				if ((this._ciudad1 != value))
				{
					this.Onciudad1Changing(value);
					this.SendPropertyChanging();
					this._ciudad1 = value;
					this.SendPropertyChanged("ciudad1");
					this.Onciudad1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Ente_salud", Storage="_Ente_salud", ThisKey="id_ciudad", OtherKey="id_ciudad")]
		public EntitySet<Ente_salud> Ente_salud
		{
			get
			{
				return this._Ente_salud;
			}
			set
			{
				this._Ente_salud.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Especialista", Storage="_Especialista", ThisKey="id_ciudad", OtherKey="id_ciudad")]
		public EntitySet<Especialista> Especialista
		{
			get
			{
				return this._Especialista;
			}
			set
			{
				this._Especialista.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ente_salud(Ente_salud entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = this;
		}
		
		private void detach_Ente_salud(Ente_salud entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = null;
		}
		
		private void attach_Especialista(Especialista entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = this;
		}
		
		private void detach_Especialista(Especialista entity)
		{
			this.SendPropertyChanging();
			entity.Ciudad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Enfermedad")]
	public partial class Enfermedad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_enfermedad;
		
		private string _nombre;
		
		private string _descripcion;
		
		private int _id_sintoma;
		
		private int _id_recomendacion;
		
		private EntitySet<Sintoma_enfermedad> _Sintoma_enfermedad;
		
		private EntityRef<Recomendacion> _Recomendacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_enfermedadChanging(int value);
    partial void Onid_enfermedadChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void Onid_sintomaChanging(int value);
    partial void Onid_sintomaChanged();
    partial void Onid_recomendacionChanging(int value);
    partial void Onid_recomendacionChanged();
    #endregion
		
		public Enfermedad()
		{
			this._Sintoma_enfermedad = new EntitySet<Sintoma_enfermedad>(new Action<Sintoma_enfermedad>(this.attach_Sintoma_enfermedad), new Action<Sintoma_enfermedad>(this.detach_Sintoma_enfermedad));
			this._Recomendacion = default(EntityRef<Recomendacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_enfermedad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_enfermedad
		{
			get
			{
				return this._id_enfermedad;
			}
			set
			{
				if ((this._id_enfermedad != value))
				{
					this.Onid_enfermedadChanging(value);
					this.SendPropertyChanging();
					this._id_enfermedad = value;
					this.SendPropertyChanged("id_enfermedad");
					this.Onid_enfermedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sintoma", DbType="Int NOT NULL")]
		public int id_sintoma
		{
			get
			{
				return this._id_sintoma;
			}
			set
			{
				if ((this._id_sintoma != value))
				{
					this.Onid_sintomaChanging(value);
					this.SendPropertyChanging();
					this._id_sintoma = value;
					this.SendPropertyChanged("id_sintoma");
					this.Onid_sintomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_recomendacion", DbType="Int NOT NULL")]
		public int id_recomendacion
		{
			get
			{
				return this._id_recomendacion;
			}
			set
			{
				if ((this._id_recomendacion != value))
				{
					if (this._Recomendacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_recomendacionChanging(value);
					this.SendPropertyChanging();
					this._id_recomendacion = value;
					this.SendPropertyChanged("id_recomendacion");
					this.Onid_recomendacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Enfermedad_Sintoma_enfermedad", Storage="_Sintoma_enfermedad", ThisKey="id_enfermedad", OtherKey="id_enfermedad")]
		public EntitySet<Sintoma_enfermedad> Sintoma_enfermedad
		{
			get
			{
				return this._Sintoma_enfermedad;
			}
			set
			{
				this._Sintoma_enfermedad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recomendacion_Enfermedad", Storage="_Recomendacion", ThisKey="id_recomendacion", OtherKey="id_recomendacion", IsForeignKey=true)]
		public Recomendacion Recomendacion
		{
			get
			{
				return this._Recomendacion.Entity;
			}
			set
			{
				Recomendacion previousValue = this._Recomendacion.Entity;
				if (((previousValue != value) 
							|| (this._Recomendacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recomendacion.Entity = null;
						previousValue.Enfermedad.Remove(this);
					}
					this._Recomendacion.Entity = value;
					if ((value != null))
					{
						value.Enfermedad.Add(this);
						this._id_recomendacion = value.id_recomendacion;
					}
					else
					{
						this._id_recomendacion = default(int);
					}
					this.SendPropertyChanged("Recomendacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sintoma_enfermedad(Sintoma_enfermedad entity)
		{
			this.SendPropertyChanging();
			entity.Enfermedad = this;
		}
		
		private void detach_Sintoma_enfermedad(Sintoma_enfermedad entity)
		{
			this.SendPropertyChanging();
			entity.Enfermedad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ente_salud")]
	public partial class Ente_salud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ente;
		
		private System.Nullable<int> _id_persona;
		
		private int _nit;
		
		private string _razon_social;
		
		private string _representante;
		
		private string _correo;
		
		private string _telefono;
		
		private string _sitio_web;
		
		private int _id_ciudad;
		
		private int _capacidad_pacientes;
		
		private EntitySet<Especialista> _Especialista;
		
		private EntityRef<Ciudad> _Ciudad;
		
		private EntityRef<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_enteChanging(int value);
    partial void Onid_enteChanged();
    partial void Onid_personaChanging(System.Nullable<int> value);
    partial void Onid_personaChanged();
    partial void OnnitChanging(int value);
    partial void OnnitChanged();
    partial void Onrazon_socialChanging(string value);
    partial void Onrazon_socialChanged();
    partial void OnrepresentanteChanging(string value);
    partial void OnrepresentanteChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void Onsitio_webChanging(string value);
    partial void Onsitio_webChanged();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Oncapacidad_pacientesChanging(int value);
    partial void Oncapacidad_pacientesChanged();
    #endregion
		
		public Ente_salud()
		{
			this._Especialista = new EntitySet<Especialista>(new Action<Especialista>(this.attach_Especialista), new Action<Especialista>(this.detach_Especialista));
			this._Ciudad = default(EntityRef<Ciudad>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ente
		{
			get
			{
				return this._id_ente;
			}
			set
			{
				if ((this._id_ente != value))
				{
					this.Onid_enteChanging(value);
					this.SendPropertyChanging();
					this._id_ente = value;
					this.SendPropertyChanged("id_ente");
					this.Onid_enteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", DbType="Int")]
		public System.Nullable<int> id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personaChanging(value);
					this.SendPropertyChanging();
					this._id_persona = value;
					this.SendPropertyChanged("id_persona");
					this.Onid_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit", DbType="Int NOT NULL")]
		public int nit
		{
			get
			{
				return this._nit;
			}
			set
			{
				if ((this._nit != value))
				{
					this.OnnitChanging(value);
					this.SendPropertyChanging();
					this._nit = value;
					this.SendPropertyChanged("nit");
					this.OnnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_razon_social", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string razon_social
		{
			get
			{
				return this._razon_social;
			}
			set
			{
				if ((this._razon_social != value))
				{
					this.Onrazon_socialChanging(value);
					this.SendPropertyChanging();
					this._razon_social = value;
					this.SendPropertyChanged("razon_social");
					this.Onrazon_socialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_representante", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string representante
		{
			get
			{
				return this._representante;
			}
			set
			{
				if ((this._representante != value))
				{
					this.OnrepresentanteChanging(value);
					this.SendPropertyChanging();
					this._representante = value;
					this.SendPropertyChanged("representante");
					this.OnrepresentanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sitio_web", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sitio_web
		{
			get
			{
				return this._sitio_web;
			}
			set
			{
				if ((this._sitio_web != value))
				{
					this.Onsitio_webChanging(value);
					this.SendPropertyChanging();
					this._sitio_web = value;
					this.SendPropertyChanged("sitio_web");
					this.Onsitio_webChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", DbType="Int NOT NULL")]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					if (this._Ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacidad_pacientes", DbType="Int NOT NULL")]
		public int capacidad_pacientes
		{
			get
			{
				return this._capacidad_pacientes;
			}
			set
			{
				if ((this._capacidad_pacientes != value))
				{
					this.Oncapacidad_pacientesChanging(value);
					this.SendPropertyChanging();
					this._capacidad_pacientes = value;
					this.SendPropertyChanged("capacidad_pacientes");
					this.Oncapacidad_pacientesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ente_salud_Especialista", Storage="_Especialista", ThisKey="id_ente", OtherKey="id_ente")]
		public EntitySet<Especialista> Especialista
		{
			get
			{
				return this._Especialista;
			}
			set
			{
				this._Especialista.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Ente_salud", Storage="_Ciudad", ThisKey="id_ciudad", OtherKey="id_ciudad", IsForeignKey=true)]
		public Ciudad Ciudad
		{
			get
			{
				return this._Ciudad.Entity;
			}
			set
			{
				Ciudad previousValue = this._Ciudad.Entity;
				if (((previousValue != value) 
							|| (this._Ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ciudad.Entity = null;
						previousValue.Ente_salud.Remove(this);
					}
					this._Ciudad.Entity = value;
					if ((value != null))
					{
						value.Ente_salud.Add(this);
						this._id_ciudad = value.id_ciudad;
					}
					else
					{
						this._id_ciudad = default(int);
					}
					this.SendPropertyChanged("Ciudad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Ente_salud", Storage="_Persona", ThisKey="id_persona", OtherKey="id_persona", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Ente_salud.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Ente_salud.Add(this);
						this._id_persona = value.id_persona;
					}
					else
					{
						this._id_persona = default(Nullable<int>);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Especialista(Especialista entity)
		{
			this.SendPropertyChanging();
			entity.Ente_salud = this;
		}
		
		private void detach_Especialista(Especialista entity)
		{
			this.SendPropertyChanging();
			entity.Ente_salud = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Especialidad")]
	public partial class Especialidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_especialidad;
		
		private string _especialidad1;
		
		private EntitySet<Especialista> _Especialista;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_especialidadChanging(int value);
    partial void Onid_especialidadChanged();
    partial void Onespecialidad1Changing(string value);
    partial void Onespecialidad1Changed();
    #endregion
		
		public Especialidad()
		{
			this._Especialista = new EntitySet<Especialista>(new Action<Especialista>(this.attach_Especialista), new Action<Especialista>(this.detach_Especialista));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_especialidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_especialidad
		{
			get
			{
				return this._id_especialidad;
			}
			set
			{
				if ((this._id_especialidad != value))
				{
					this.Onid_especialidadChanging(value);
					this.SendPropertyChanging();
					this._id_especialidad = value;
					this.SendPropertyChanged("id_especialidad");
					this.Onid_especialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="especialidad", Storage="_especialidad1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string especialidad1
		{
			get
			{
				return this._especialidad1;
			}
			set
			{
				if ((this._especialidad1 != value))
				{
					this.Onespecialidad1Changing(value);
					this.SendPropertyChanging();
					this._especialidad1 = value;
					this.SendPropertyChanged("especialidad1");
					this.Onespecialidad1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidad_Especialista", Storage="_Especialista", ThisKey="id_especialidad", OtherKey="id_especialidad")]
		public EntitySet<Especialista> Especialista
		{
			get
			{
				return this._Especialista;
			}
			set
			{
				this._Especialista.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Especialista(Especialista entity)
		{
			this.SendPropertyChanging();
			entity.Especialidad = this;
		}
		
		private void detach_Especialista(Especialista entity)
		{
			this.SendPropertyChanging();
			entity.Especialidad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Especialista")]
	public partial class Especialista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_especialista;
		
		private System.Nullable<int> _id_ente;
		
		private string _nombre;
		
		private string _correo;
		
		private string _celular;
		
		private int _id_especialidad;
		
		private int _id_ciudad;
		
		private int _num_licencia;
		
		private System.DateTime _fech_expedicion_licen;
		
		private EntitySet<Cita> _Cita;
		
		private EntityRef<Ciudad> _Ciudad;
		
		private EntityRef<Ente_salud> _Ente_salud;
		
		private EntityRef<Especialidad> _Especialidad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_especialistaChanging(int value);
    partial void Onid_especialistaChanged();
    partial void Onid_enteChanging(System.Nullable<int> value);
    partial void Onid_enteChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void Onid_especialidadChanging(int value);
    partial void Onid_especialidadChanged();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Onnum_licenciaChanging(int value);
    partial void Onnum_licenciaChanged();
    partial void Onfech_expedicion_licenChanging(System.DateTime value);
    partial void Onfech_expedicion_licenChanged();
    #endregion
		
		public Especialista()
		{
			this._Cita = new EntitySet<Cita>(new Action<Cita>(this.attach_Cita), new Action<Cita>(this.detach_Cita));
			this._Ciudad = default(EntityRef<Ciudad>);
			this._Ente_salud = default(EntityRef<Ente_salud>);
			this._Especialidad = default(EntityRef<Especialidad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_especialista", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_especialista
		{
			get
			{
				return this._id_especialista;
			}
			set
			{
				if ((this._id_especialista != value))
				{
					this.Onid_especialistaChanging(value);
					this.SendPropertyChanging();
					this._id_especialista = value;
					this.SendPropertyChanged("id_especialista");
					this.Onid_especialistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ente", DbType="Int")]
		public System.Nullable<int> id_ente
		{
			get
			{
				return this._id_ente;
			}
			set
			{
				if ((this._id_ente != value))
				{
					if (this._Ente_salud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_enteChanging(value);
					this.SendPropertyChanging();
					this._id_ente = value;
					this.SendPropertyChanged("id_ente");
					this.Onid_enteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_especialidad", DbType="Int NOT NULL")]
		public int id_especialidad
		{
			get
			{
				return this._id_especialidad;
			}
			set
			{
				if ((this._id_especialidad != value))
				{
					if (this._Especialidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_especialidadChanging(value);
					this.SendPropertyChanging();
					this._id_especialidad = value;
					this.SendPropertyChanged("id_especialidad");
					this.Onid_especialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", DbType="Int NOT NULL")]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					if (this._Ciudad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_licencia", DbType="Int NOT NULL")]
		public int num_licencia
		{
			get
			{
				return this._num_licencia;
			}
			set
			{
				if ((this._num_licencia != value))
				{
					this.Onnum_licenciaChanging(value);
					this.SendPropertyChanging();
					this._num_licencia = value;
					this.SendPropertyChanged("num_licencia");
					this.Onnum_licenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fech_expedicion_licen", DbType="Date NOT NULL")]
		public System.DateTime fech_expedicion_licen
		{
			get
			{
				return this._fech_expedicion_licen;
			}
			set
			{
				if ((this._fech_expedicion_licen != value))
				{
					this.Onfech_expedicion_licenChanging(value);
					this.SendPropertyChanging();
					this._fech_expedicion_licen = value;
					this.SendPropertyChanged("fech_expedicion_licen");
					this.Onfech_expedicion_licenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialista_Cita", Storage="_Cita", ThisKey="id_especialista", OtherKey="id_especialista")]
		public EntitySet<Cita> Cita
		{
			get
			{
				return this._Cita;
			}
			set
			{
				this._Cita.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudad_Especialista", Storage="_Ciudad", ThisKey="id_ciudad", OtherKey="id_ciudad", IsForeignKey=true)]
		public Ciudad Ciudad
		{
			get
			{
				return this._Ciudad.Entity;
			}
			set
			{
				Ciudad previousValue = this._Ciudad.Entity;
				if (((previousValue != value) 
							|| (this._Ciudad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ciudad.Entity = null;
						previousValue.Especialista.Remove(this);
					}
					this._Ciudad.Entity = value;
					if ((value != null))
					{
						value.Especialista.Add(this);
						this._id_ciudad = value.id_ciudad;
					}
					else
					{
						this._id_ciudad = default(int);
					}
					this.SendPropertyChanged("Ciudad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ente_salud_Especialista", Storage="_Ente_salud", ThisKey="id_ente", OtherKey="id_ente", IsForeignKey=true)]
		public Ente_salud Ente_salud
		{
			get
			{
				return this._Ente_salud.Entity;
			}
			set
			{
				Ente_salud previousValue = this._Ente_salud.Entity;
				if (((previousValue != value) 
							|| (this._Ente_salud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ente_salud.Entity = null;
						previousValue.Especialista.Remove(this);
					}
					this._Ente_salud.Entity = value;
					if ((value != null))
					{
						value.Especialista.Add(this);
						this._id_ente = value.id_ente;
					}
					else
					{
						this._id_ente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ente_salud");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidad_Especialista", Storage="_Especialidad", ThisKey="id_especialidad", OtherKey="id_especialidad", IsForeignKey=true)]
		public Especialidad Especialidad
		{
			get
			{
				return this._Especialidad.Entity;
			}
			set
			{
				Especialidad previousValue = this._Especialidad.Entity;
				if (((previousValue != value) 
							|| (this._Especialidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Especialidad.Entity = null;
						previousValue.Especialista.Remove(this);
					}
					this._Especialidad.Entity = value;
					if ((value != null))
					{
						value.Especialista.Add(this);
						this._id_especialidad = value.id_especialidad;
					}
					else
					{
						this._id_especialidad = default(int);
					}
					this.SendPropertyChanged("Especialidad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Especialista = this;
		}
		
		private void detach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Especialista = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hora_cita")]
	public partial class Hora_cita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_hora;
		
		private System.TimeSpan _hora;
		
		private EntitySet<Cita> _Cita;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_horaChanging(int value);
    partial void Onid_horaChanged();
    partial void OnhoraChanging(System.TimeSpan value);
    partial void OnhoraChanged();
    #endregion
		
		public Hora_cita()
		{
			this._Cita = new EntitySet<Cita>(new Action<Cita>(this.attach_Cita), new Action<Cita>(this.detach_Cita));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_hora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_hora
		{
			get
			{
				return this._id_hora;
			}
			set
			{
				if ((this._id_hora != value))
				{
					this.Onid_horaChanging(value);
					this.SendPropertyChanging();
					this._id_hora = value;
					this.SendPropertyChanged("id_hora");
					this.Onid_horaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora", DbType="Time NOT NULL")]
		public System.TimeSpan hora
		{
			get
			{
				return this._hora;
			}
			set
			{
				if ((this._hora != value))
				{
					this.OnhoraChanging(value);
					this.SendPropertyChanging();
					this._hora = value;
					this.SendPropertyChanged("hora");
					this.OnhoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hora_cita_Cita", Storage="_Cita", ThisKey="id_hora", OtherKey="id_hora")]
		public EntitySet<Cita> Cita
		{
			get
			{
				return this._Cita;
			}
			set
			{
				this._Cita.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Hora_cita = this;
		}
		
		private void detach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Hora_cita = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persona")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_persona;
		
		private int _id_rol;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _correo;
		
		private string _celular;
		
		private int _cedula;
		
		private string _password;
		
		private EntitySet<Cita> _Cita;
		
		private EntitySet<Ente_salud> _Ente_salud;
		
		private EntityRef<Rol> _Rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_personaChanging(int value);
    partial void Onid_personaChanged();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void OncedulaChanging(int value);
    partial void OncedulaChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Persona()
		{
			this._Cita = new EntitySet<Cita>(new Action<Cita>(this.attach_Cita), new Action<Cita>(this.detach_Cita));
			this._Ente_salud = new EntitySet<Ente_salud>(new Action<Ente_salud>(this.attach_Ente_salud), new Action<Ente_salud>(this.detach_Ente_salud));
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					this.Onid_personaChanging(value);
					this.SendPropertyChanging();
					this._id_persona = value;
					this.SendPropertyChanged("id_persona");
					this.Onid_personaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int NOT NULL")]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50)")]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(50)")]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="Int NOT NULL")]
		public int cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this.OncedulaChanging(value);
					this.SendPropertyChanging();
					this._cedula = value;
					this.SendPropertyChanged("cedula");
					this.OncedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Cita", Storage="_Cita", ThisKey="id_persona", OtherKey="id_persona")]
		public EntitySet<Cita> Cita
		{
			get
			{
				return this._Cita;
			}
			set
			{
				this._Cita.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Ente_salud", Storage="_Ente_salud", ThisKey="id_persona", OtherKey="id_persona")]
		public EntitySet<Ente_salud> Ente_salud
		{
			get
			{
				return this._Ente_salud;
			}
			set
			{
				this._Ente_salud.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Persona", Storage="_Rol", ThisKey="id_rol", OtherKey="id_rol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.Persona.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.Persona.Add(this);
						this._id_rol = value.id_rol;
					}
					else
					{
						this._id_rol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Ente_salud(Ente_salud entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Ente_salud(Ente_salud entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recomendacion")]
	public partial class Recomendacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_recomendacion;
		
		private string _recomendacion1;
		
		private EntitySet<Enfermedad> _Enfermedad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_recomendacionChanging(int value);
    partial void Onid_recomendacionChanged();
    partial void Onrecomendacion1Changing(string value);
    partial void Onrecomendacion1Changed();
    #endregion
		
		public Recomendacion()
		{
			this._Enfermedad = new EntitySet<Enfermedad>(new Action<Enfermedad>(this.attach_Enfermedad), new Action<Enfermedad>(this.detach_Enfermedad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_recomendacion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_recomendacion
		{
			get
			{
				return this._id_recomendacion;
			}
			set
			{
				if ((this._id_recomendacion != value))
				{
					this.Onid_recomendacionChanging(value);
					this.SendPropertyChanging();
					this._id_recomendacion = value;
					this.SendPropertyChanged("id_recomendacion");
					this.Onid_recomendacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="recomendacion", Storage="_recomendacion1", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string recomendacion1
		{
			get
			{
				return this._recomendacion1;
			}
			set
			{
				if ((this._recomendacion1 != value))
				{
					this.Onrecomendacion1Changing(value);
					this.SendPropertyChanging();
					this._recomendacion1 = value;
					this.SendPropertyChanged("recomendacion1");
					this.Onrecomendacion1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recomendacion_Enfermedad", Storage="_Enfermedad", ThisKey="id_recomendacion", OtherKey="id_recomendacion")]
		public EntitySet<Enfermedad> Enfermedad
		{
			get
			{
				return this._Enfermedad;
			}
			set
			{
				this._Enfermedad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Enfermedad(Enfermedad entity)
		{
			this.SendPropertyChanging();
			entity.Recomendacion = this;
		}
		
		private void detach_Enfermedad(Enfermedad entity)
		{
			this.SendPropertyChanging();
			entity.Recomendacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rol;
		
		private string _rol1;
		
		private EntitySet<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void Onrol1Changing(string value);
    partial void Onrol1Changed();
    #endregion
		
		public Rol()
		{
			this._Persona = new EntitySet<Persona>(new Action<Persona>(this.attach_Persona), new Action<Persona>(this.detach_Persona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rol", Storage="_rol1", DbType="VarChar(50)")]
		public string rol1
		{
			get
			{
				return this._rol1;
			}
			set
			{
				if ((this._rol1 != value))
				{
					this.Onrol1Changing(value);
					this.SendPropertyChanging();
					this._rol1 = value;
					this.SendPropertyChanged("rol1");
					this.Onrol1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Persona", Storage="_Persona", ThisKey="id_rol", OtherKey="id_rol")]
		public EntitySet<Persona> Persona
		{
			get
			{
				return this._Persona;
			}
			set
			{
				this._Persona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_Persona(Persona entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sintoma")]
	public partial class Sintoma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sintoma;
		
		private string _sintoma1;
		
		private EntitySet<Sintoma_enfermedad> _Sintoma_enfermedad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_sintomaChanging(int value);
    partial void Onid_sintomaChanged();
    partial void Onsintoma1Changing(string value);
    partial void Onsintoma1Changed();
    #endregion
		
		public Sintoma()
		{
			this._Sintoma_enfermedad = new EntitySet<Sintoma_enfermedad>(new Action<Sintoma_enfermedad>(this.attach_Sintoma_enfermedad), new Action<Sintoma_enfermedad>(this.detach_Sintoma_enfermedad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sintoma", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sintoma
		{
			get
			{
				return this._id_sintoma;
			}
			set
			{
				if ((this._id_sintoma != value))
				{
					this.Onid_sintomaChanging(value);
					this.SendPropertyChanging();
					this._id_sintoma = value;
					this.SendPropertyChanged("id_sintoma");
					this.Onid_sintomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sintoma", Storage="_sintoma1", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string sintoma1
		{
			get
			{
				return this._sintoma1;
			}
			set
			{
				if ((this._sintoma1 != value))
				{
					this.Onsintoma1Changing(value);
					this.SendPropertyChanging();
					this._sintoma1 = value;
					this.SendPropertyChanged("sintoma1");
					this.Onsintoma1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sintoma_Sintoma_enfermedad", Storage="_Sintoma_enfermedad", ThisKey="id_sintoma", OtherKey="id_sintoma")]
		public EntitySet<Sintoma_enfermedad> Sintoma_enfermedad
		{
			get
			{
				return this._Sintoma_enfermedad;
			}
			set
			{
				this._Sintoma_enfermedad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sintoma_enfermedad(Sintoma_enfermedad entity)
		{
			this.SendPropertyChanging();
			entity.Sintoma = this;
		}
		
		private void detach_Sintoma_enfermedad(Sintoma_enfermedad entity)
		{
			this.SendPropertyChanging();
			entity.Sintoma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VistaEnfermedad")]
	public partial class VistaEnfermedad
	{
		
		private string _nombre;
		
		private string _descripcion;
		
		private string _sintoma;
		
		private string _recomendacion;
		
		public VistaEnfermedad()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this._nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this._descripcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintoma", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string sintoma
		{
			get
			{
				return this._sintoma;
			}
			set
			{
				if ((this._sintoma != value))
				{
					this._sintoma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recomendacion", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string recomendacion
		{
			get
			{
				return this._recomendacion;
			}
			set
			{
				if ((this._recomendacion != value))
				{
					this._recomendacion = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VistaEspecialista")]
	public partial class VistaEspecialista
	{
		
		private string _nombre;
		
		private string _ciudad;
		
		private string _especialidad;
		
		private string _correo;
		
		private string _celular;
		
		private int _num_licencia;
		
		private System.DateTime _fech_expedicion_licen;
		
		private int _id_especialista;
		
		private string _razon_social;
		
		public VistaEspecialista()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this._nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ciudad", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ciudad
		{
			get
			{
				return this._ciudad;
			}
			set
			{
				if ((this._ciudad != value))
				{
					this._ciudad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_especialidad", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string especialidad
		{
			get
			{
				return this._especialidad;
			}
			set
			{
				if ((this._especialidad != value))
				{
					this._especialidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this._correo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this._celular = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_licencia", DbType="Int NOT NULL")]
		public int num_licencia
		{
			get
			{
				return this._num_licencia;
			}
			set
			{
				if ((this._num_licencia != value))
				{
					this._num_licencia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fech_expedicion_licen", DbType="Date NOT NULL")]
		public System.DateTime fech_expedicion_licen
		{
			get
			{
				return this._fech_expedicion_licen;
			}
			set
			{
				if ((this._fech_expedicion_licen != value))
				{
					this._fech_expedicion_licen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_especialista", DbType="Int NOT NULL")]
		public int id_especialista
		{
			get
			{
				return this._id_especialista;
			}
			set
			{
				if ((this._id_especialista != value))
				{
					this._id_especialista = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_razon_social", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string razon_social
		{
			get
			{
				return this._razon_social;
			}
			set
			{
				if ((this._razon_social != value))
				{
					this._razon_social = value;
				}
			}
		}
	}
	
	public partial class sp_loginResult
	{
		
		private int _id_persona;
		
		private int _id_rol;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _correo;
		
		private string _celular;
		
		private int _cedula;
		
		private string _password;
		
		public sp_loginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_persona", DbType="Int NOT NULL")]
		public int id_persona
		{
			get
			{
				return this._id_persona;
			}
			set
			{
				if ((this._id_persona != value))
				{
					this._id_persona = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int NOT NULL")]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					this._id_rol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this._nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this._apellido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50)")]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this._correo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(50)")]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this._celular = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="Int NOT NULL")]
		public int cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this._cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
